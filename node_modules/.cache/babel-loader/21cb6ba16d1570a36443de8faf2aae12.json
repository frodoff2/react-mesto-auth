{"ast":null,"code":"import _toConsumableArray from\"/Users/assetmurzabayev/Desktop/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/assetmurzabayev/Desktop/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import Main from'./Main.js';import{CurrentUserContext}from'../contexts/CurrentUserContext.js';import ImagePopup from'./ImagePopup.js';import EditProfilePopup from'./EditProfilePopup.js';import EditAvatarPopup from'./EditAvatarPopup.js';import AddPlacePopup from'./AddPlacePopup.js';import DeletePopup from'./DeletePopup.js';import Footer from'./Footer.js';import api from'../utils/API.js';function Elements(){var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),currentUser=_React$useState2[0],setCurrentUser=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),cards=_React$useState4[0],setCards=_React$useState4[1];var _React$useState5=React.useState([]),_React$useState6=_slicedToArray(_React$useState5,2),deleteCard=_React$useState6[0],setDeleteCard=_React$useState6[1];var _React$useState7=React.useState(false),_React$useState8=_slicedToArray(_React$useState7,2),isEditProfilePopupOpen=_React$useState8[0],setEditProfilePopupOpen=_React$useState8[1];var _React$useState9=React.useState(false),_React$useState10=_slicedToArray(_React$useState9,2),isAddPlacePopupOpen=_React$useState10[0],setAddPlacePopupOpen=_React$useState10[1];var _React$useState11=React.useState(false),_React$useState12=_slicedToArray(_React$useState11,2),isEditAvatarPopupOpen=_React$useState12[0],setEditAvatarPopupOpen=_React$useState12[1];var _React$useState13=React.useState(false),_React$useState14=_slicedToArray(_React$useState13,2),isDeletePopupOpen=_React$useState14[0],setDeletePopupOpen=_React$useState14[1];var _React$useState15=React.useState(false),_React$useState16=_slicedToArray(_React$useState15,2),selectedCard=_React$useState16[0],setSelectedCard=_React$useState16[1];var _React$useState17=React.useState([]),_React$useState18=_slicedToArray(_React$useState17,2),bigPopup=_React$useState18[0],setBigPopup=_React$useState18[1];// получаем информацию о пользователе\nReact.useEffect(function(){api.getInfo().then(function(res){setCurrentUser(res);}).catch(function(err){console.log(err);});},[]);// получаем карточки от сервера\nReact.useEffect(function(){api.getInitialCards().then(function(data){setCards(data);}).catch(function(err){console.log(err);});},[]);// функция для лайков и дизлайков карточки\nfunction handleCardLike(card){// Снова проверяем, есть ли уже лайк на этой карточке\nvar isLiked=card.likes.some(function(i){return i._id===currentUser._id;});// Отправляем запрос в API и получаем обновлённые данные карточки\napi.changeLikeCardStatus(\"\".concat(card._id),isLiked).then(function(newCard){// Формируем новый массив на основе имеющегося, подставляя в него новую карточку\nvar newCards=cards.map(function(c){return c._id===card._id?newCard:c;});// Обновляем стейт\nsetCards(newCards);});}// функция для удаления карточки\nfunction handleCardDeleteSubmit(){api.deleteCard(deleteCard._id).then(function(){var newCards=cards.filter(function(c){return c._id!==deleteCard._id;});setCards(newCards);closeAllPopups();});}// изменяем информацию о пользователи \nfunction handleUpdateUser(_ref){var name=_ref.name,about=_ref.about;api.editProfile(name,about).then(function(data){setCurrentUser(data);closeAllPopups();});}// изменяем аватар\nfunction handleUpdateAvatar(_ref2){var avatar=_ref2.avatar;api.changeAvatar(avatar).then(function(data){setCurrentUser(data);closeAllPopups();});}// открываем увеличенную карточку\nfunction handleCardClick(props){setSelectedCard(true);setBigPopup(props);}// открываем попап редактирования информации\nfunction handleEditProfile(){setEditProfilePopupOpen(true);}// открываем попап добавления нового места\nfunction handleAddPlace(){setAddPlacePopupOpen(true);console.log();}// попап редактирования аватарки\nfunction handleEditAvatar(){setEditAvatarPopupOpen(true);}// удаления карточки\nfunction handleDelete(card){setDeleteCard(card);setDeletePopupOpen(true);}function closeAllPopups(){setEditProfilePopupOpen(false);setAddPlacePopupOpen(false);setEditAvatarPopupOpen(false);setSelectedCard(false);setDeletePopupOpen(false);}// добавляем новую карточку\nfunction handleAddPlaceSubmit(_ref3){var name=_ref3.name,link=_ref3.link;api.addNewCard(name,link).then(function(newCard){setCards([newCard].concat(_toConsumableArray(cards)));});closeAllPopups();}return/*#__PURE__*/React.createElement(CurrentUserContext.Provider,{value:currentUser},/*#__PURE__*/React.createElement(EditProfilePopup,{isOpen:isEditProfilePopupOpen,onClose:closeAllPopups,onUpdateUser:handleUpdateUser}),/*#__PURE__*/React.createElement(AddPlacePopup,{isOpen:isAddPlacePopupOpen,onClose:closeAllPopups,onAddPlace:handleAddPlaceSubmit}),/*#__PURE__*/React.createElement(EditAvatarPopup,{isOpen:isEditAvatarPopupOpen,onClose:closeAllPopups,onUpdateAvatar:handleUpdateAvatar}),/*#__PURE__*/React.createElement(DeletePopup,{isOpen:isDeletePopupOpen,onClose:closeAllPopups,onSubmit:handleCardDeleteSubmit}),/*#__PURE__*/React.createElement(ImagePopup,{card:bigPopup,isOpen:selectedCard,onClose:closeAllPopups}),/*#__PURE__*/React.createElement(Main,{onEditProfile:handleEditProfile,onAddPlace:handleAddPlace,onEditAvatar:handleEditAvatar,cards:cards,cardLike:handleCardLike,onDeleteButton:handleDelete,onCardClick:handleCardClick}),/*#__PURE__*/React.createElement(Footer,null));}export default Elements;","map":{"version":3,"sources":["/Users/assetmurzabayev/Desktop/mesto-react/src/components/Elements.js"],"names":["React","Main","CurrentUserContext","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","DeletePopup","Footer","api","Elements","useState","currentUser","setCurrentUser","cards","setCards","deleteCard","setDeleteCard","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isDeletePopupOpen","setDeletePopupOpen","selectedCard","setSelectedCard","bigPopup","setBigPopup","useEffect","getInfo","then","res","catch","err","console","log","getInitialCards","data","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","newCards","map","c","handleCardDeleteSubmit","filter","closeAllPopups","handleUpdateUser","name","about","editProfile","handleUpdateAvatar","avatar","changeAvatar","handleCardClick","props","handleEditProfile","handleAddPlace","handleEditAvatar","handleDelete","handleAddPlaceSubmit","link","addNewCard"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Main from './Main.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport ImagePopup from './ImagePopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport DeletePopup from './DeletePopup.js';\nimport Footer from './Footer.js';\nimport api from '../utils/API.js';\n\nfunction Elements() {\n    const [currentUser, setCurrentUser] = React.useState([]);\n    const [cards, setCards] = React.useState([]);\n    const [deleteCard, setDeleteCard] = React.useState([])\n\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n    const [isDeletePopupOpen, setDeletePopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState(false);\n    const [bigPopup, setBigPopup] = React.useState([]);\n  \n        // получаем информацию о пользователе\n  React.useEffect(() => {\n    api.getInfo().then(res => {\n      setCurrentUser(res)\n      })\n      .catch(err => { \n        console.log(err)  \n      }) \n    }, [])\n    \n    \n  // получаем карточки от сервера\n  React.useEffect(() => {\n    api.getInitialCards().then(data => {\n      setCards(data); \n    })\n    .catch(err => { \n      console.log(err)  \n    }) \n  }, []);\n    \n    // функция для лайков и дизлайков карточки\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n     api.changeLikeCardStatus(`${card._id}`, isLiked)\n      .then((newCard) => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      // Обновляем стейт\n      setCards(newCards);\n    });\n  } \n    // функция для удаления карточки\n  function handleCardDeleteSubmit() {\n    api.deleteCard(deleteCard._id)\n      .then(() => {\n        const newCards = cards.filter((c) => c._id !== deleteCard._id);\n        setCards(newCards);\n        closeAllPopups();\n      });\n    }\n  // изменяем информацию о пользователи \n  function handleUpdateUser({name, about}) {\n    api.editProfile(name, about) \n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n    }\n  // изменяем аватар\n  function handleUpdateAvatar({avatar}) {\n    api.changeAvatar(avatar)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n  }\n    // открываем увеличенную карточку\n    function handleCardClick(props) {\n      setSelectedCard(true);\n      setBigPopup(props);\n    }\n    // открываем попап редактирования информации\n    function handleEditProfile() {\n      setEditProfilePopupOpen(true);\n    }\n    // открываем попап добавления нового места\n    function handleAddPlace() {\n      setAddPlacePopupOpen(true);\n      console.log();\n    }\n    // попап редактирования аватарки\n    function handleEditAvatar() {\n      setEditAvatarPopupOpen(true);\n    }\n    // удаления карточки\n    function handleDelete(card) {\n      setDeleteCard(card)\n      setDeletePopupOpen(true)\n    }\n  \n    function closeAllPopups() {\n      setEditProfilePopupOpen(false);\n      setAddPlacePopupOpen(false);\n      setEditAvatarPopupOpen(false);\n      setSelectedCard(false);\n      setDeletePopupOpen(false)\n    }\n  \n    // добавляем новую карточку\n    function handleAddPlaceSubmit({name, link}) {\n      api.addNewCard(name, link)\n        .then((newCard) => {\n          setCards([newCard, ...cards]);\n          })\n        closeAllPopups();\n      }\n\nreturn(\n  <CurrentUserContext.Provider value={currentUser}>  \n\n\n  <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n\n<AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit}/>\n      \n<EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar}/>\n \n<DeletePopup isOpen={isDeletePopupOpen} onClose={closeAllPopups} onSubmit={handleCardDeleteSubmit}  />\n\n<ImagePopup card={bigPopup} isOpen={selectedCard} onClose={closeAllPopups}/>\n  \n<Main      \n                onEditProfile={handleEditProfile} \n                onAddPlace={handleAddPlace} \n                onEditAvatar={handleEditAvatar}\n                cards={cards}  \n              cardLike={handleCardLike} \n              onDeleteButton={handleDelete} \n              onCardClick={handleCardClick}\n  />\n  \n<Footer />\n\n</CurrentUserContext.Provider>\n\n  );\n}\n\nexport default Elements;"]},"metadata":{},"sourceType":"module"}