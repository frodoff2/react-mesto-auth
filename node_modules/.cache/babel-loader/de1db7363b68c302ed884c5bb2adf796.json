{"ast":null,"code":"var _jsxFileName = \"/Users/assetmurzabayev/Desktop/mesto-react/src/components/App.js\";\nimport React from 'react';\nimport { BrowserRouter, NavLink, Route, Switch, Redirect, useHistory } from \"react-router-dom\";\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport ImagePopup from './ImagePopup.js';\nimport api from '../utils/API.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport Login from './Login.js';\nimport Register from './Register.js';\nimport DeletePopup from './DeletePopup.js';\nimport InfoToolTips from './InfoToolTip.js';\nimport ProtectedRoute from './ProtectedRoute.js';\nimport * as Auth from '../Auth.js';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isDeletePopupOpen, setDeletePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(false);\n  const [bigPopup, setBigPopup] = React.useState([]);\n  const [currentUser, setCurrentUser] = React.useState([]);\n  const [cards, setCards] = React.useState([]);\n  const [deleteCard, setDeleteCard] = React.useState([]);\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [userData, setUserData] = React.useState('');\n  const history = useHistory();\n\n  function handleLogin() {\n    setLoggedIn(true);\n  }\n\n  function tokenCheck() {\n    if (localStorage.getItem('jwt')) {\n      let jwt = localStorage.getItem('jwt');\n      Auth.getContent(jwt).then(data => {\n        if (data) {\n          history.push('/');\n          setLoggedIn(true);\n          setUserData({\n            email: data.email\n          });\n        }\n      }).catch(err => {\n        console.log(`Упс, произошла ошибка: ${err}`);\n      });\n    }\n  }\n\n  React.useEffect(() => {\n    tokenCheck();\n  }, [loggedIn]); // открываем увеличенную карточку\n\n  function handleCardClick(props) {\n    setSelectedCard(true);\n    setBigPopup(props);\n  } // открываем попап редактирования информации\n\n\n  function handleEditProfile() {\n    setEditProfilePopupOpen(true);\n  } // открываем попап добавления нового места\n\n\n  function handleAddPlace() {\n    setAddPlacePopupOpen(true);\n  } // попап редактирования аватарки\n\n\n  function handleEditAvatar() {\n    setEditAvatarPopupOpen(true);\n  } // удаления карточки\n\n\n  function handleDelete(card) {\n    setDeleteCard(card);\n    setDeletePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setSelectedCard(false);\n    setDeletePopupOpen(false);\n  } // получаем информацию о пользователе\n\n\n  React.useEffect(() => {\n    api.getInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // добавляем новую карточку\n\n  function handleAddPlaceSubmit({\n    name,\n    link\n  }) {\n    api.addNewCard(name, link).then(newCard => {\n      setCards([newCard, ...cards]);\n    });\n    closeAllPopups();\n  } // получаем карточки от сервера\n\n\n  React.useEffect(() => {\n    api.getInitialCards().then(data => {\n      setCards(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // функция для лайков и дизлайков карточки\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(`${card._id}`, isLiked).then(newCard => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map(c => c._id === card._id ? newCard : c); // Обновляем стейт\n\n      setCards(newCards);\n    });\n  } // функция для удаления карточки\n\n\n  function handleCardDeleteSubmit() {\n    api.deleteCard(deleteCard._id).then(() => {\n      const newCards = cards.filter(c => c._id !== deleteCard._id);\n      setCards(newCards);\n      closeAllPopups();\n    });\n  } // изменяем информацию о пользователи \n\n\n  function handleUpdateUser({\n    name,\n    about\n  }) {\n    api.editProfile(name, about).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    });\n  } // изменяем аватар\n\n\n  function handleUpdateAvatar({\n    avatar\n  }) {\n    api.changeAvatar(avatar).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CurrentUserContext.Provider, {\n    value: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    exact: true,\n    path: \"/\",\n    loggedIn: loggedIn,\n    component: Main,\n    cards: cards,\n    cardLike: handleCardLike,\n    onEditProfile: handleEditProfile,\n    onAddPlace: handleAddPlace,\n    onDeleteButton: handleDelete,\n    onCardClick: handleCardClick,\n    onEditAvatar: handleEditAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Register, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 36\n    }\n  }), \" \", /*#__PURE__*/React.createElement(InfoToolTips, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 49\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(Route, {\n    path: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Login, {\n    handleLogin: handleLogin,\n    tokenCheck: tokenCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 36\n    }\n  }), \"  \"), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, \" \", loggedIn ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 42\n    }\n  }) : /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 64\n    }\n  }), \" \")), /*#__PURE__*/React.createElement(EditProfilePopup, {\n    isOpen: isEditProfilePopupOpen,\n    onClose: closeAllPopups,\n    onUpdateUser: handleUpdateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AddPlacePopup, {\n    isOpen: isAddPlacePopupOpen,\n    onClose: closeAllPopups,\n    onAddPlace: handleAddPlaceSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EditAvatarPopup, {\n    isOpen: isEditAvatarPopupOpen,\n    onClose: closeAllPopups,\n    onUpdateAvatar: handleUpdateAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(DeletePopup, {\n    isOpen: isDeletePopupOpen,\n    onClose: closeAllPopups,\n    onSubmit: handleCardDeleteSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ImagePopup, {\n    card: bigPopup,\n    isOpen: selectedCard,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"elements\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/assetmurzabayev/Desktop/mesto-react/src/components/App.js"],"names":["React","BrowserRouter","NavLink","Route","Switch","Redirect","useHistory","Header","Main","Footer","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Login","Register","DeletePopup","InfoToolTips","ProtectedRoute","Auth","App","isEditProfilePopupOpen","setEditProfilePopupOpen","useState","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isDeletePopupOpen","setDeletePopupOpen","selectedCard","setSelectedCard","bigPopup","setBigPopup","currentUser","setCurrentUser","cards","setCards","deleteCard","setDeleteCard","loggedIn","setLoggedIn","userData","setUserData","history","handleLogin","tokenCheck","localStorage","getItem","jwt","getContent","then","data","push","email","catch","err","console","log","useEffect","handleCardClick","props","handleEditProfile","handleAddPlace","handleEditAvatar","handleDelete","card","closeAllPopups","getInfo","res","handleAddPlaceSubmit","name","link","addNewCard","newCard","getInitialCards","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCards","map","c","handleCardDeleteSubmit","filter","handleUpdateUser","about","editProfile","handleUpdateAvatar","avatar","changeAvatar"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter, NavLink, Route, Switch, Redirect, useHistory } from \"react-router-dom\";\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport ImagePopup from './ImagePopup.js';\nimport api from '../utils/API.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport Login from './Login.js';\nimport Register from './Register.js';\nimport DeletePopup from './DeletePopup.js';\nimport InfoToolTips from './InfoToolTip.js';\nimport ProtectedRoute from './ProtectedRoute.js';\nimport * as Auth from '../Auth.js'\n\nfunction App() {\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isDeletePopupOpen, setDeletePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(false);\n  const [bigPopup, setBigPopup] = React.useState([]);\n  \n  const [currentUser, setCurrentUser] = React.useState([]);\n  const [cards, setCards] = React.useState([]);\n  const [deleteCard, setDeleteCard] = React.useState([])\n\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [userData, setUserData] = React.useState('');\n  const history = useHistory();\n\n\n  function handleLogin() {\n    setLoggedIn(true);\n  }\n\n  function tokenCheck() {\n    if (localStorage.getItem('jwt')) {\n      let jwt = localStorage.getItem('jwt');\n      Auth.getContent(jwt)\n        .then((data) => {\n          if (data) {\n            history.push('/');\n            setLoggedIn(true); \n            setUserData({\n              email: data.email\n            }); \n          }\n        })\n        .catch((err) => {\n          console.log(`Упс, произошла ошибка: ${err}`);\n        })\n    }\n  }\n\n   React.useEffect(() => {\n    tokenCheck();\n  }, [loggedIn]) \n\n  // открываем увеличенную карточку\n  function handleCardClick(props) {\n    setSelectedCard(true);\n    setBigPopup(props);\n  }\n  // открываем попап редактирования информации\n  function handleEditProfile() {\n    setEditProfilePopupOpen(true);\n  }\n  // открываем попап добавления нового места\n  function handleAddPlace() {\n    setAddPlacePopupOpen(true);\n  }\n  // попап редактирования аватарки\n  function handleEditAvatar() {\n    setEditAvatarPopupOpen(true);\n  }\n  // удаления карточки\n  function handleDelete(card) {\n    setDeleteCard(card)\n    setDeletePopupOpen(true)\n  }\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setSelectedCard(false);\n    setDeletePopupOpen(false)\n  }\n\n    // получаем информацию о пользователе\n  React.useEffect(() => {\n    api.getInfo().then(res => {\n      setCurrentUser(res)\n      })\n      .catch(err => { \n        console.log(err)  \n      }) \n    }, [])\n    \n    // добавляем новую карточку\n  function handleAddPlaceSubmit({name, link}) {\n    api.addNewCard(name, link)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        })\n      closeAllPopups();\n    }\n  // получаем карточки от сервера\n  React.useEffect(() => {\n    api.getInitialCards().then(data => {\n      setCards(data); \n    })\n    .catch(err => { \n      console.log(err)  \n    }) \n  }, []);\n    \n    // функция для лайков и дизлайков карточки\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n     api.changeLikeCardStatus(`${card._id}`, isLiked)\n      .then((newCard) => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      // Обновляем стейт\n      setCards(newCards);\n    });\n  } \n    // функция для удаления карточки\n  function handleCardDeleteSubmit() {\n    api.deleteCard(deleteCard._id)\n      .then(() => {\n        const newCards = cards.filter((c) => c._id !== deleteCard._id);\n        setCards(newCards);\n        closeAllPopups();\n      });\n    }\n  // изменяем информацию о пользователи \n  function handleUpdateUser({name, about}) {\n    api.editProfile(name, about) \n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n    }\n  // изменяем аватар\n  function handleUpdateAvatar({avatar}) {\n    api.changeAvatar(avatar)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n  }\n\n  return (\n\n      <div className=\"App\">\n        <div className=\"page\">  \n        <CurrentUserContext.Provider value={currentUser}> \n\n          <Header />\n  \n\n          <ProtectedRoute exact path=\"/\" loggedIn={loggedIn} component={Main} \n              cards={cards} \n              cardLike={handleCardLike} \n              onEditProfile={handleEditProfile} \n              onAddPlace={handleAddPlace} \n              onDeleteButton={handleDelete} \n              onCardClick={handleCardClick}\n              onEditAvatar={handleEditAvatar} \n          />\n\n<Switch>\n\n            <Route path=\"/signup\"> <Register /> <InfoToolTips /> </Route>\n\n            <Route path=\"/signin\"> <Login handleLogin={handleLogin} tokenCheck={tokenCheck}/>  </Route>\n\n            <Route path=\"/\"> {loggedIn ? <Redirect to=\"/\" /> : <Redirect to='/signin' />} </Route>\n\n            </Switch>\n          \n            <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n        \n            <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit}/>\n        \n            <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar}/>\n   \n            <DeletePopup isOpen={isDeletePopupOpen} onClose={closeAllPopups} onSubmit={handleCardDeleteSubmit}  />\n\n        <ImagePopup card={bigPopup} isOpen={selectedCard} onClose={closeAllPopups}/>\n\n        <section className=\"elements\">  \n        \n        </section>  \n        \n        <Footer />\n\n\n      </CurrentUserContext.Provider>\n\n      </div>  \n    </div>\n\n  );\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}