{"ast":null,"code":"import _classCallCheck from\"/Users/assetmurzabayev/Desktop/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/assetmurzabayev/Desktop/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";export var Api=/*#__PURE__*/function(){function Api(_ref){var baseUrl=_ref.baseUrl,headers=_ref.headers;_classCallCheck(this,Api);this.baseUrl=baseUrl;this.headers=headers;}_createClass(Api,[{key:\"getInfo\",value:function getInfo(){return fetch(this.baseUrl,{method:'GET',headers:this.headers}).then(function(res){if(res.ok){return res.json();}// если ошибка, отклоняем промис\nreturn Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));});}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch('https://mesto.nomoreparties.co/v1/cohort-12/cards',{method:'GET',headers:this.headers}).then(function(res){if(res.ok){return res.json();}// если ошибка, отклоняем промис\nreturn Promise.reject(\"\\u041A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0438 \\u043D\\u0435 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0436\\u0435\\u043D\\u044B: \".concat(res.status));});}},{key:\"editProfile\",value:function editProfile(name,about){return fetch(this.baseUrl,{method:'PATCH',headers:this.headers,body:JSON.stringify({name:name,about:about})}).then(function(res){if(res.ok){return res.json();}// если ошибка, отклоняем промис\nreturn Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));});}},{key:\"addNewCard\",value:function addNewCard(name,link){return fetch('https://mesto.nomoreparties.co/v1/cohort-12/cards',{method:'POST',headers:this.headers,body:JSON.stringify({name:name,link:link})}).then(function(res){if(res.ok){return res.json();}// если ошибка, отклоняем промис\nreturn Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));});}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(id,isLiked){if(isLiked){return fetch(\"https://mesto.nomoreparties.co/v1/cohort-12/cards/likes/\".concat(id),{method:'DELETE',headers:this.headers}).then(function(res){if(res.ok){return res.json();}// если ошибка, отклоняем промис\nreturn Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));});}else{return fetch(\"https://mesto.nomoreparties.co/v1/cohort-12/cards/likes/\".concat(id),{method:'PUT',headers:this.headers}).then(function(res){if(res.ok){return res.json();}// если ошибка, отклоняем промис\nreturn Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));});}}},{key:\"deleteCard\",value:function deleteCard(id){return fetch(\"https://mesto.nomoreparties.co/v1/cohort-12/cards/\".concat(id),{method:'DELETE',headers:this.headers}).then(function(res){if(res.ok){return res.json();}// если ошибка, отклоняем промис\nreturn Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));});}},{key:\"changeAvatar\",value:function changeAvatar(avatar){return fetch('https://mesto.nomoreparties.co/v1/cohort-12/users/me/avatar',{method:'PATCH',headers:this.headers,body:JSON.stringify({avatar:avatar})}).then(function(res){if(res.ok){return res.json();}// если ошибка, отклоняем промис\nreturn Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));});}}]);return Api;}();// создаем экземпляр \nvar api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-12/users/me',headers:{authorization:'8eaaf06a-2ca4-4be0-bedd-db145fddf3b1','Content-Type':'application/json'}});export default api;","map":{"version":3,"sources":["/Users/assetmurzabayev/Desktop/mesto-react/src/utils/API.js"],"names":["Api","baseUrl","headers","fetch","method","then","res","ok","json","Promise","reject","status","name","about","body","JSON","stringify","link","id","isLiked","avatar","api","authorization"],"mappings":"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","sourcesContent":["\n\nexport class Api {\n  constructor({ baseUrl, headers }) {\n  this.baseUrl = baseUrl;\n  this.headers = headers;\n  }\n\n  getInfo() {\n    return fetch( this.baseUrl, {  \n        method: 'GET', \n        headers: this.headers \n      })\n      .then(res => {\n        if (res.ok) {\n        return res.json();\n        }\n        // если ошибка, отклоняем промис\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  getInitialCards() {\n    return fetch('https://mesto.nomoreparties.co/v1/cohort-12/cards', { \n      method: 'GET',\n      headers: this.headers   \n    })\n    .then(res => {\n      if (res.ok) {\n          return res.json();\n      }\n      // если ошибка, отклоняем промис\n      return Promise.reject(`Карточки не загружены: ${res.status}`);\n      })\n  }\n\n  editProfile(name, about) {\n    return fetch(this.baseUrl, {\n      method: 'PATCH', \n      headers: this.headers,\n      body: JSON.stringify({\n          name: name,\n          about: about\n        })\n      })\n      .then(res => {\n      if (res.ok) {\n      return res.json();\n      }\n      // если ошибка, отклоняем промис\n      return Promise.reject(`Ошибка: ${res.status}`);\n    })\n  }\n  \n  addNewCard(name, link) {\n      return fetch('https://mesto.nomoreparties.co/v1/cohort-12/cards', {\n        method: 'POST',\n        headers: this.headers,\n        body: JSON.stringify({\n          name: name,\n          link: link\n        }) \n      })\n      .then(res => {\n          if (res.ok) {\n          return res.json();\n          }\n          // если ошибка, отклоняем промис\n          return Promise.reject(`Ошибка: ${res.status}`);\n        })\n  }\n  \n\n  changeLikeCardStatus(id, isLiked) {\n  if (isLiked) {\n    return fetch(`https://mesto.nomoreparties.co/v1/cohort-12/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this.headers,\n      }) \n      .then(res => {\n       if (res.ok) {\n       return res.json();\n       }\n       // если ошибка, отклоняем промис\n       return Promise.reject(`Ошибка: ${res.status}`);\n     })\n  } else {\n    return fetch(`https://mesto.nomoreparties.co/v1/cohort-12/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this.headers,\n      }) \n      .then(res => {\n       if (res.ok) {\n       return res.json();\n       }\n       // если ошибка, отклоняем промис\n       return Promise.reject(`Ошибка: ${res.status}`); \n     })  \n    }}\n\n\n  deleteCard(id) {\n   return fetch(`https://mesto.nomoreparties.co/v1/cohort-12/cards/${id}`, {\n     method: 'DELETE',\n     headers: this.headers,\n    }) \n    .then(res => {\n     if (res.ok) {\n     return res.json();\n     }\n     // если ошибка, отклоняем промис\n     return Promise.reject(`Ошибка: ${res.status}`);\n   })\n  } \n\nchangeAvatar(avatar) {\n return fetch('https://mesto.nomoreparties.co/v1/cohort-12/users/me/avatar' , {\n  method: 'PATCH',\n  headers: this.headers,\n  body: JSON.stringify({\n    avatar: avatar\n  })\n  })\n  .then(res => {\n   if (res.ok) {\n   return res.json();\n   }\n   // если ошибка, отклоняем промис\n   return Promise.reject(`Ошибка: ${res.status}`);\n })\n}\n}\n// создаем экземпляр \n const api = new Api({ \n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12/users/me', \n  headers: { \n      authorization: '8eaaf06a-2ca4-4be0-bedd-db145fddf3b1', \n      'Content-Type': 'application/json' \n   } \n}) \n\nexport default api;\n\n"]},"metadata":{},"sourceType":"module"}