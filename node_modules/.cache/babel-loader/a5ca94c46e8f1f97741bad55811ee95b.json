{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => {\n    try {\n      if (res.status === 201) {\n        return res.json();\n      }\n    } catch (err) {\n      return err;\n    }\n  }).then(res => {\n    return res;\n  }).catch(err => console.log(err));\n};\nexport const login = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => {\n    try {\n      if (res.status === 200) {\n        return res.json();\n      }\n    } catch (err) {\n      return err;\n    }\n\n    ;\n  }).then(res => {\n    localStorage.setItem('jwt', data.token);\n    return data;\n  });\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => {\n    try {\n      if (res.status === 200) {\n        return res.json();\n      }\n\n      if (res.status === 401) {\n        return console.log('Токен не передан или передан не в том формате');\n      }\n    } catch (err) {\n      return err;\n    }\n\n    ;\n    return res;\n  }).then(data => {\n    return data;\n  });\n};\n/*\nexport const login = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },  \n    body: JSON.stringify({email, password })\n  })\n   .then((res => res.json()))\n   .then((data) => {\n     if(data.user) {\n       localStorage.setItem('jwt', data.jwt);\n       return data;\n     } else {\n       return;\n     }\n   })\n   .catch(err => console.log(err))\n  };\n\n/*\nexport const login = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email, password })\n  })\n  .then((res) => {\n    try {\n      if (res.status === 200){\n        return res.json();\n      }\n    } catch(e){\n      return (e)\n    }\n  })\n  .then((data) => {\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n  })\n  .catch((err) => {\n    console.log(err)\n  });\n};\n\n\nexport const login = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n    body: JSON.stringify({email, password})\n  })\n .then((res) => {\n   try {\n    if (res.status === 200) {\n    return res.json();\n   }\n  }\n  .catch(err) {\n   return err;\n };\n  return res;\n })\n .then((data) => {\n     localStorage.setItem('jwt', data.jwt);\n     return data\n });\n} \n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n        'Accept': 'application/json',\n        \"Content-Type\": \"application/json\",\n        \"Authorization\" : `Bearer ${token}`,\n    }\n  })\n  .then((res) => {\n    if (res.status === 200) {\n      return res.json();\n    }\n  })\n  .then(data => data)\n} \n\n*/","map":{"version":3,"sources":["/Users/assetmurzabayev/Desktop/mesto-react/src/Auth.js"],"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","res","status","json","err","catch","console","log","login","localStorage","setItem","data","token","getContent"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAOC,KAAK,CAAG,GAAEJ,QAAS,SAAd,EAAwB;AAClCK,IAAAA,MAAM,EAAE,MAD0B;AAElCC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAFyB;AAMhCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAf;AAN0B,GAAxB,CAAL,CAQJO,IARI,CAQEC,GAAD,IAAS;AACX,QAAI;AACF,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAuB;AACrB,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;AACF,KAJD,CAIE,OAAMC,GAAN,EAAW;AACT,aAAOA,GAAP;AACH;AACJ,GAhBI,EAiBJJ,IAjBI,CAiBEC,GAAD,IAAS;AACb,WAAOA,GAAP;AACD,GAnBI,EAoBJI,KApBI,CAoBGD,GAAD,IAASE,OAAO,CAACC,GAAR,CAAYH,GAAZ,CApBX,CAAP;AAqBD,CAtBM;AAyBP,OAAO,MAAMI,KAAK,GAAG,CAAChB,KAAD,EAAQC,QAAR,KAAqB;AACxC,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBP,MAAAA,KADmB;AACZC,MAAAA;AADY,KAAf;AAL2B,GAAvB,CAAL,CASJO,IATI,CASEC,GAAD,IAAS;AACb,QAAI;AACF,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;AACF,KAJD,CAKA,OAAOC,GAAP,EAAY;AACV,aAAOA,GAAP;AACD;;AAAA;AACF,GAlBI,EAmBJJ,IAnBI,CAmBEC,GAAD,IAAS;AACbQ,IAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BC,IAAI,CAACC,KAAjC;AACA,WAAOD,IAAP;AACD,GAtBI,CAAP;AAuBD,CAxBM;AA0BP,OAAO,MAAME,UAAU,GAAID,KAAD,IAAW;AACnC,SAAOlB,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;AACnCK,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAkB,UAASgB,KAAM;AAF1B;AAF0B,GAAzB,CAAL,CAOJZ,IAPI,CAOEC,GAAD,IAAS;AACb,QAAI;AACF,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;;AACD,UAAIF,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,eAAOI,OAAO,CAACC,GAAR,CAAY,+CAAZ,CAAP;AACD;AACF,KAPD,CAQA,OAAOH,GAAP,EAAY;AACV,aAAOA,GAAP;AACD;;AAAA;AACD,WAAOH,GAAP;AACD,GApBI,EAqBJD,IArBI,CAqBEW,IAAD,IAAU;AACd,WAAOA,IAAP;AACD,GAvBI,CAAP;AAwBD,CAzBM;AA2BP","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = (email, password) => {\n  return fetch (`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({email, password})\n    })\n    .then((res) => {\n        try {\n          if (res.status === 201){\n            return res.json();\n          }\n        } catch(err) {\n            return err\n        }\n    }) \n    .then((res) => {\n      return res;\n    })\n    .catch((err) => console.log(err));\n};\n\n\nexport const login = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email, password\n    })\n  })\n    .then((res) => {\n      try {\n        if (res.status === 200) {\n          return res.json();\n        }\n      }\n      catch (err) {\n        return err;\n      };\n    })\n    .then((res) => {\n      localStorage.setItem('jwt', data.token);\n      return data;\n    });\n}\n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      \"Authorization\": `Bearer ${token}`\n    },\n  })\n    .then((res) => {\n      try {\n        if (res.status === 200) {\n          return res.json();\n        }\n        if (res.status === 401) {\n          return console.log('Токен не передан или передан не в том формате')\n        }\n      }\n      catch (err) {\n        return err;\n      };\n      return res;\n    })\n    .then((data) => {\n      return data;\n    });\n}\n\n/*\nexport const login = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },  \n    body: JSON.stringify({email, password })\n  })\n   .then((res => res.json()))\n   .then((data) => {\n     if(data.user) {\n       localStorage.setItem('jwt', data.jwt);\n       return data;\n     } else {\n       return;\n     }\n   })\n   .catch(err => console.log(err))\n  };\n\n/*\nexport const login = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email, password })\n  })\n  .then((res) => {\n    try {\n      if (res.status === 200){\n        return res.json();\n      }\n    } catch(e){\n      return (e)\n    }\n  })\n  .then((data) => {\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n  })\n  .catch((err) => {\n    console.log(err)\n  });\n};\n\n\nexport const login = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n    body: JSON.stringify({email, password})\n  })\n .then((res) => {\n   try {\n    if (res.status === 200) {\n    return res.json();\n   }\n  }\n  .catch(err) {\n   return err;\n };\n  return res;\n })\n .then((data) => {\n     localStorage.setItem('jwt', data.jwt);\n     return data\n });\n} \n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n        'Accept': 'application/json',\n        \"Content-Type\": \"application/json\",\n        \"Authorization\" : `Bearer ${token}`,\n    }\n  })\n  .then((res) => {\n    if (res.status === 200) {\n      return res.json();\n    }\n  })\n  .then(data => data)\n} \n\n*/"]},"metadata":{},"sourceType":"module"}