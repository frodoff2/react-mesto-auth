{"ast":null,"code":"export var BASE_URL='https://auth.nomoreparties.co';export var register=function register(email,password){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(function(res){try{if(res.status===201){return res.json();}}catch(err){return err;}}).then(function(res){return res;});};export var login=function login(email,password){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:email,password:password})}).then(function(res){try{if(res.status===200){return res.json();}if(res.status===401){return console.log('некорректно заполнено одно из полей');}}catch(err){return err;};}).then(function(data){localStorage.setItem('jwt',data.token);return data;});};export var getContent=function getContent(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{'Content-Type':'application/json',\"Authorization\":\"Bearer \".concat(token)}}).then(function(res){try{if(res.status===200){return res.json();}if(res.status===401){return console.log('Токен не передан или передан не в том формате');}}catch(err){return err;};}).then(function(data){return data;});};","map":{"version":3,"sources":["/Users/assetmurzabayev/Desktop/react-mesto-auth/src/Auth.js"],"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","res","status","json","err","login","console","log","data","localStorage","setItem","token","getContent"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,QAAQ,CAAG,+BAAjB,CAEP,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAQC,QAAR,CAAqB,CAC3C,MAAOC,CAAAA,KAAK,WAAKJ,QAAL,YAAwB,CAClCK,MAAM,CAAE,MAD0B,CAElCC,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,kBAFX,CAFyB,CAMhCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACP,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAf,CAN0B,CAAxB,CAAL,CAQJO,IARI,CAQC,SAACC,GAAD,CAAS,CACX,GAAI,CACF,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAuB,CACrB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACD,CACF,CAAC,MAAMC,GAAN,CAAW,CACT,MAAOA,CAAAA,GAAP,CACH,CACJ,CAhBI,EAiBJJ,IAjBI,CAiBC,SAACC,GAAD,CAAS,CACb,MAAOA,CAAAA,GAAP,CACD,CAnBI,CAAP,CAoBD,CArBM,CAwBP,MAAO,IAAMI,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACb,KAAD,CAAQC,QAAR,CAAqB,CACxC,MAAOC,CAAAA,KAAK,WAAIJ,QAAJ,YAAuB,CACjCK,MAAM,CAAE,MADyB,CAEjCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFwB,CAKjCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACnBP,KAAK,CAALA,KADmB,CACZC,QAAQ,CAARA,QADY,CAAf,CAL2B,CAAvB,CAAL,CASJO,IATI,CASC,SAACC,GAAD,CAAS,CACb,GAAI,CACF,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACtB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACD,CACD,GAAIF,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACtB,MAAOI,CAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,CAAP,CACD,CACF,CACD,MAAOH,GAAP,CAAY,CACV,MAAOA,CAAAA,GAAP,CACD,EACF,CArBI,EAsBJJ,IAtBI,CAsBC,SAACQ,IAAD,CAAU,CACdC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAA4BF,IAAI,CAACG,KAAjC,EACA,MAAOH,CAAAA,IAAP,CACD,CAzBI,CAAP,CA0BD,CA3BM,CA6BP,MAAO,IAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACD,KAAD,CAAW,CACnC,MAAOjB,CAAAA,KAAK,WAAIJ,QAAJ,cAAyB,CACnCK,MAAM,CAAE,KAD2B,CAEnCC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEP,iCAA2Be,KAA3B,CAFO,CAF0B,CAAzB,CAAL,CAOJX,IAPI,CAOC,SAACC,GAAD,CAAS,CACb,GAAI,CACF,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACtB,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACD,CACD,GAAIF,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACtB,MAAOI,CAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ,CAAP,CACD,CACF,CACD,MAAOH,GAAP,CAAY,CACV,MAAOA,CAAAA,GAAP,CACD,EACF,CAnBI,EAoBJJ,IApBI,CAoBC,SAACQ,IAAD,CAAU,CACd,MAAOA,CAAAA,IAAP,CACD,CAtBI,CAAP,CAuBD,CAxBM","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = (email, password) => {\n  return fetch (`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({email, password})\n    })\n    .then((res) => {\n        try {\n          if (res.status === 201){\n            return res.json();\n          }\n        } catch(err) {\n            return err\n        }\n    }) \n    .then((res) => {\n      return res;\n    })\n};\n\n\nexport const login = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email, password\n    })\n  })\n    .then((res) => {\n      try {\n        if (res.status === 200) {\n          return res.json();\n        }\n        if (res.status === 401) {\n          return console.log('некорректно заполнено одно из полей')\n        }\n      }\n      catch (err) {\n        return err;\n      };\n    })\n    .then((data) => {\n      localStorage.setItem('jwt', data.token);\n      return data;\n    });\n}\n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      \"Authorization\": `Bearer ${token}`\n    },\n  })\n    .then((res) => {\n      try {\n        if (res.status === 200) {\n          return res.json();\n        }\n        if (res.status === 401) {\n          return console.log('Токен не передан или передан не в том формате')\n        }\n      }\n      catch (err) {\n        return err;\n      };\n    })\n    .then((data) => {\n      return data;\n    });\n}"]},"metadata":{},"sourceType":"module"}